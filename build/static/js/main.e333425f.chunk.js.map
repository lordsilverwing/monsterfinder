{"version":3,"sources":["components/ErrorMessage/ErrorMessage.jsx","utils/tokenService.js","utils/userService.js","pages/SignupPage/SignupPage.jsx","pages/LoginPage/LoginPage.jsx","components/Typeahead/Typeahead.jsx","components/MonsterInput/MonsterInput.jsx","components/ChallengeRatings/ChallengeRatings.jsx","components/RandomMonster/RandomMonster.jsx","pages/MonsterSearch/MonsterSearch.jsx","components/SpecialAbility/SpecialAbility.jsx","components/MonsterActions/MonsterActions.jsx","components/Proficiencies/Proficiencies.jsx","components/MonsterDetails/MonsterDetails.jsx","pages/MonsterProfile/MonsterProfile.jsx","components/RandomMonsterCard/RandomMonsterCard.jsx","pages/RandomMonsterPage/RandomMonsterPage.jsx","components/Header/Header.jsx","pages/Profile/Profile.jsx","utils/favoriteService.js","pages/App/App.jsx","serviceWorker.js","index.js"],"names":["ErrorMessage","props","className","error","getToken","token","localStorage","getItem","JSON","parse","atob","split","exp","Date","now","removeItem","setFavoriteMonsters","favoriteMonsters","setItem","stringify","setToken","user","removeToken","getUserFromToken","BASE_URL","signup","fetch","method","body","then","res","ok","json","Error","tokenService","logout","login","creds","headers","Headers","getUser","SignUpPage","useState","invalidForm","setError","selectedFile","setSelectedFile","username","email","password","passwordConf","bio","state","setState","history","useHistory","handleChange","e","target","name","value","a","key","preventDefault","formData","FormData","append","userService","handleSignUpOrLogin","push","console","log","message","Grid","textAlign","style","height","verticalAlign","Column","maxWidth","Header","as","color","Image","circular","src","Form","autoComplete","onSubmit","Segment","stacked","Input","placeholder","onChange","required","type","TextArea","label","Field","files","Button","disabled","LoginPage","fluid","size","Message","to","timeout","Typeahead","fetchAllOnOpen","getDetails","getSuggestions","inputDelay","maxSuggestions","performAction","inputValue","setInputValue","isFetching","setIsFetching","suggestionIndex","setSuggestionIndex","suggestions","setSuggestions","suggestionsVisible","setSuggestionVisibility","retrieveSuggestions","input","response","loadSuggestions","clearTimeout","setTimeout","handleInputChange","newInputValue","handleSuggestionClick","id","text","selection","nextIndex","newIndex","length","handleInputFocus","evt","onFocus","onBlur","onKeyDown","keyCode","prevIndex","stopPropagation","Math","max","List","Item","val","regex","RegExp","textMatches","toLowerCase","match","filter","slice","filterSuggestions","map","s","i","action","onMouseDown","MonsterInput","monsterData","m","index","challengeRatingList","RandomMonster","challengeRating","setChallengeRating","cr","parseFloat","htmlFor","MonsterSearch","setMonsterData","useEffect","data","results","handleRandom","SpecialAbility","ability","desc","Proficiencies","pro","proficiency","MonsterDetails","monster","speed","favoriteApi","addFavorite","removeFavorite","favoriteIndexNumber","findIndex","monsterName","isFavorited","setIsFavorited","senses","vuln","resist","immune","prop","damage_vulnerabilities","damage_immunities","damage_resistances","favMon","clickHandler","_id","favoriteColor","proficiencies","Icon","onClick","alignment","subtype","armor_class","hit_points","hit_dice","challenge_rating","strength","dexterity","constitution","intelligence","wisdom","charisma","languages","special_abilities","actions","xp","MonsterProfile","loaded","setLoaded","monsterIndex","useParams","dungeonsAndDragons5Url","RandomMonsterCard","location","RandomMonsterPage","setMonster","randomMonster","useLocation","monsterCr","queryString","search","random","floor","monsterSplice","splice","PageHeader","handleLogout","clearing","floated","icon","Profile","monsters","library","add","fab","create","userID","favID","App","setUser","u","favoriteId","favoriteFun","exact","path","component","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e333425f.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function ErrorMessage(props){\n    return <span className={\"error\"}>{props.error}</span>\n}","function setToken(user) {\n    if (user.token) {\n      // localStorage is given to us by the browser\n      localStorage.setItem('token', user.token);\n    } else {\n      localStorage.removeItem('token');\n    }\n    if (user && user.favoriteMonsters) {\n      setFavoriteMonsters(user.favoriteMonsters)\n    }\n  }\n  \n  function getToken() {\n    let token = localStorage.getItem('token');\n    if (token) {\n      // Check if expired, remove if it is\n      // atob is a function that decodes a base-64 string\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      // JWT's exp is expressed in seconds, not milliseconds, so convert\n      if (payload.exp < Date.now() / 1000) {\n        localStorage.removeItem('token');\n        token = null;\n      }\n    }\n    return token;\n  }\n  \n  function getUserFromToken() {\n    const token = getToken();\n    const user = token ? JSON.parse(atob(token.split('.')[1])).user : null;\n    if(user){\n    user.favoriteMonsters = JSON.parse(localStorage.getItem('favoriteMonsters') || '[]');\n    }\n    return user;\n  }\n  \n  function removeToken() {\n    localStorage.removeItem('token');\n    setFavoriteMonsters([])\n  }\n\n  function setFavoriteMonsters(favoriteMonsters){\n    localStorage.setItem('favoriteMonsters', JSON.stringify(favoriteMonsters))\n  }\n  \n  export default {\n    setToken,\n    getToken,\n    removeToken,\n    getUserFromToken,\n    setFavoriteMonsters\n  };","import tokenService from './tokenService';\n\nconst BASE_URL = '/api/users/';\n\n\n// NOTE THIS IS configured to send of a multi/part form request\n// aka photo \nfunction signup(user) {\n  return fetch(BASE_URL + 'signup', {\n    method: 'POST',\n    body: user\n  })\n  .then(res => {\n    if (res.ok) return res.json();\n    // Probably a duplicate email\n    throw new Error('Email already taken!');\n  })\n  // Parameter destructuring!\n  .then(({token}) => tokenService.setToken(token));\n  // Setting our token in localStorage in our browser\n  // then we'll be able to use with every request!\n  // The above could have been written as\n  //.then((token) => token.token);\n}\n\nfunction getUser() {\n  return tokenService.getUserFromToken();\n}\n\nfunction logout() {\n  tokenService.removeToken();\n}\n\nfunction login(creds) {\n  return fetch(BASE_URL + 'login', {\n    method: 'POST',\n    headers: new Headers({'Content-Type': 'application/json'}),\n    body: JSON.stringify(creds)\n  })\n  .then(res => {\n    // Valid login if we have a status of 2xx (res.ok)\n    if (res.ok) return res.json();\n    throw new Error('Bad Credentials!');\n  })\n  .then((user) => tokenService.setToken(user));\n}\n\n\nexport default {\n  signup, \n  logout,\n  login,\n  getUser\n};","import React, { useState } from 'react';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage';\nimport { Button, Form, Grid, Header, Image, Segment } from 'semantic-ui-react'\nimport userService from '../../utils/userService';\nimport { useHistory } from 'react-router-dom';\n\n\nexport default function SignUpPage(props){\n\n    const [invalidForm, setValidForm] = useState(false)\n    const [error, setError] = useState('')\n    const [selectedFile, setSelectedFile] = useState('')\n    const [state, setState] = useState({\n        username: '',\n        email: '',\n        password:'',\n        passwordConf: '',\n        bio: ''\n        });\n\n    const history = useHistory()\n\n    function handleChange(e){\n        setState({\n            ...state,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    async function handleSubmit(e){\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('photo', selectedFile);\n\n        for (let key in state){\n            formData.append(key, state[key])\n        }\n        try {\n            await userService.signup(formData);\n\n            props.handleSignUpOrLogin()\n\n            history.push('/')\n        } catch(err){\n            console.log(err.message)\n            setError(err.message)\n        }\n    }\n\n    function handleFileInput(e){\n        setSelectedFile(e.target.files[0])\n    }\n\n\n \n    \n    return (\n        <>\n        <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n              <Header as='h2' color='purple' textAlign='center'>\n                <Image circular src=\"https://i.imgur.com/5C9sWbz.jpg\" /> Sign Up    \n              </Header>            \n                <Form autoComplete=\"off\"  onSubmit={handleSubmit}>\n                <Segment stacked>               \n                    <Form.Input                    \n                      name=\"username\"\n                      placeholder=\"username\"\n                      value={state.username}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Input\n                      type=\"email\"                  \n                      name=\"email\"\n                      placeholder=\"email\"\n                      value={ state.email}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Input             \n                      name=\"password\"\n                      type=\"password\"\n                      placeholder=\"password\"\n                      value={ state.password}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.Input     \n                      name=\"passwordConf\"\n                      type=\"password\"\n                      placeholder=\"Confirm Password\"\n                      value={ state.passwordConf}\n                      onChange={handleChange}\n                      required\n                    />\n                    <Form.TextArea label='bio' placeholder='Tell us about you...' name=\"bio\" onChange={handleChange}/>\n                    <Form.Field> \n                        <Form.Input\n                          type=\"file\"\n                          name=\"photo\"\n                          placeholder=\"upload image\"\n                          onChange={handleFileInput}\n                        />      \n                    </Form.Field>\n                    <Button\n                      type=\"submit\"\n                      className=\"btn\"\n                      disabled={invalidForm}\n                    >\n                    Signup\n                  </Button>\n                  </Segment>\n                  {error ? <ErrorMessage error={error} /> : null}\n                </Form>\n               \n            </Grid.Column>\n          </Grid>\n        </>\n        \n\n        \n      );   \n    \n}\n","import React, { useState } from 'react';\nimport './LoginPage.css';\nimport ErrorMessage from '../../components/ErrorMessage/ErrorMessage'\nimport userService from '../../utils/userService';\nimport { useHistory, Link } from 'react-router-dom';\nimport { Button, Form, Grid, Header, Image, Message, Segment } from 'semantic-ui-react'\n\n\nexport default function LoginPage(props){\n    const [invalidForm, setValidForm] = useState(false);\n    const [error, setError] = useState('')\n    const [state, setState] = useState({\n        email:'',\n        password:''\n    })\n    const history = useHistory();\n\n    function handleChange(e){\n        setState({\n            ...state,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    async function handleSubmit(e){\n        e.preventDefault()\n\n        try {\n            await userService.login(state);\n            props.handleSignUpOrLogin()\n            history.push('/')\n        } catch (err) {\n            setError(err.message)\n        }\n    }\n    \n\n    return (\n        <>\n          <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n            <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as='h2' color='purple' textAlign='center'>\n            <Image circular src='https://i.imgur.com/5C9sWbz.jpg'/> Log-in to your account\n            </Header>\n            <Form  autoComplete=\"off\"  onSubmit={handleSubmit}>\n               <Segment stacked>\n                  <Form.Input\n                    type=\"email\"\n                   \n                    name=\"email\"\n                    placeholder=\"email\"\n                    value={ state.email}\n                    onChange={handleChange}\n                    required\n                  />\n                  <Form.Input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"password\"\n                    value={ state.password}\n                    onChange={handleChange}\n                    required\n                  />\n                <Button\n                  color='purple'\n                  fluid size='large'\n                  type=\"submit\"\n                  className=\"btn\"\n                  disabled={invalidForm}\n                >\n                  Login\n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              New to us? <Link to='/signup'>Sign Up</Link>\n            </Message>\n            {error ? <ErrorMessage error={error} /> : null}\n            </Grid.Column>\n          </Grid>\n        </> \n      );\n}\n\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport './Typeahead.css'\nimport { Form, List } from \"semantic-ui-react\";\n\n\nconst DEFAULT_SUGGESTION_INDEX = -1;\nlet timeout;\n\nconst propTypes = {\n\tfetchAllOnOpen: PropTypes.bool,\n\tgetDetails: PropTypes.func,\n\tgetSuggestions: PropTypes.func,\n\tinputDelay: PropTypes.number,\n\tmaxSuggestions: PropTypes.number,\n\tonChange: PropTypes.func,\n\tperformAction: PropTypes.func,\n\tplaceholder: PropTypes.string,\n\tvalue: PropTypes.string\n};\n\n/**\n * @param {Object} props - typeahead props\n * @param {bool} props.fetchAllOnOpen - indicates all the values should be fetched initially (default: false)\n * @param {func} props.getDetails - function that returns selection details by id\n * @param {func} props.getSuggestions - function that returns selections as [{ text: \"\", id: \"\" }]\n * @param {number} props.inputDelay - milliseconds before execution of suggestion retreival (default: 1500)\n * @param {number} props.maxSuggestions - number of suggestions to display (default: 5)\n * @param {func} props.performAction - Callback function call when selection is chosen\n * @param {string} props.placeholder - text to display when no input has been provided\n * @param {string} props.value - initial value of the input\n * @returns \n */\nconst Typeahead = ({\n\tfetchAllOnOpen = false,\n\tgetDetails,\n\tgetSuggestions = async () => ([]),\n\tinputDelay = 1500,\n\tmaxSuggestions = 5,\n\tonChange = () => {},\n\tperformAction,\n\tplaceholder = \"Begin typing...\",\n\tvalue = \"\"\n}) => {\n\tconst [inputValue, setInputValue] = useState(value);\n\tconst [isFetching, setIsFetching] = useState(false);\n\tconst [suggestionIndex, setSuggestionIndex] = useState(DEFAULT_SUGGESTION_INDEX);\n\tconst [suggestions, setSuggestions] = useState([]);\n\tconst [suggestionsVisible, setSuggestionVisibility] = useState(true);\n\n\tconst retrieveSuggestions = async (input) => {\n\t\tconst response = await getSuggestions(input)\n        console.log(response)\n\t\tsetSuggestions(response);\n\t\tsetIsFetching(false);\n\t};\n\n\tconst loadSuggestions = async (input) => {\n\t\t\tsetSuggestionVisibility(true);\n\t\t\tsetIsFetching(true);\n\t\t\t!!timeout && clearTimeout(timeout);\n\t\t\ttimeout = setTimeout(() => retrieveSuggestions(input), inputDelay);\n\t}\n\n\tconst handleInputChange = async (newInputValue) => {\n\t\tsetInputValue(newInputValue)\n\t\tif(!fetchAllOnOpen) {\n\t\t\tawait loadSuggestions(newInputValue);\n\t\t}\n\t}\n\n\tconst handleSuggestionClick = async (id, text) => {\n\t\tsetInputValue(text);\n\t\tif(!!id) {\n\t\t\tsetIsFetching(true);\n\n\t\t\tif(!!getDetails) {\n\t\t\t\tconst selection = await getDetails(id);\n\t\t\t\tonChange(selection);\n\t\t\t}\n\n\t\t\tif(!!performAction) {\n\t\t\t\tperformAction(id);\n\t\t\t}\n\n\t\t\tsetSuggestionIndex(DEFAULT_SUGGESTION_INDEX);\n\t\t\tsetSuggestionVisibility(false);\n\t\t\tsetIsFetching(false);\n\t\t}\n\t}\n\n\tconst nextIndex = () => {\n\t\tlet newIndex = suggestionIndex + 1;\n\t\tif(newIndex >= suggestions.length) {\n\t\t\tnewIndex = 0;\n\t\t}\n\t\tsetSuggestionIndex(newIndex);\n\t}\n\n\tconst prevIndex = () => {\n\t\tlet newIndex = suggestionIndex - 1;\n\t\tif(newIndex < 0) {\n\t\t\tnewIndex = suggestions.length - 1;\n\t\t}\n\t\tsetSuggestionIndex(newIndex);\n\t}\n\t\n\tconst handleKeyDown = (evt) => {\n\t\tif(!!suggestionsVisible && !!suggestions && !!suggestions.length) {\n\t\t\tswitch(evt.keyCode) {\n\t\t\t\tcase 40: // down arrow\n\t\t\t\t\tnextIndex();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 38: // up arrow\n\t\t\t\t\tprevIndex();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 9: // tab\n\t\t\t\t\tevt.preventDefault(); \n\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\tnextIndex();\n\t\t\t\t\tbreak;\n\t\t\t\tcase 13: // Enter\n\t\t\t\t\tevt.preventDefault(); \n\t\t\t\t\tevt.stopPropagation();\n\t\t\t\t\tconst {id, text} = suggestions[Math.max(suggestionIndex, 0)];\n\t\t\t\t\thandleSuggestionClick(id, text);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 27: // escape\n\t\t\t\t\tsetSuggestionVisibility(false)\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\n\tconst handleInputFocus = async () => {\n\t\tif(!suggestions.length) {\n\t\t\tloadSuggestions(inputValue || value);\n\t\t\treturn;\n\t\t}\n\n\t\tif(!!fetchAllOnOpen && !suggestions.length) {\n\t\t\tloadSuggestions(\"\");\n\t\t\treturn;\n\t\t}\n\n\t\tsetSuggestionVisibility(true);\n\t}\n\n\tconst filterSuggestions = (suggestions = [], val = \"\") => {\n\t\tif(!!fetchAllOnOpen && !!val) {\n\t\t\tconst regex = new RegExp(val, \"i\");\n\n\t\t\tconst textMatches = ({ text = \"\" }) => (text.toLowerCase().match(regex) || []).length;\n\t\t\tconst highlight = ({ text, id }) => ({ html: text.replace(regex, \"<strong>$&</strong>\"), text, id });\n\n\t\t\treturn suggestions.filter(textMatches).slice(0, maxSuggestions);\n\t\t}\n\t\treturn suggestions.slice(0, maxSuggestions);\n\t}\n\t\n\treturn (\n\t\t<div className=\"typeahead\">\n\t\t\t<Form.Input\n\t\t\t\tplaceholder={placeholder}\n\t\t\t\ttype=\"text\" \n\t\t\t\tvalue={inputValue || value} \n\t\t\t\tonChange={(evt) => handleInputChange(evt.target.value)}\n\t\t\t\tonFocus={handleInputFocus}\n\t\t\t\tonBlur={() => setSuggestionVisibility(false)}\n\t\t\t\tonKeyDown={handleKeyDown}\n\t\t\t/>\t\t\t\n\t\t\t{ //!!suggestionsVisible && (!!isFetching || (!!suggestions && !!suggestions.length)) && \n\t\t\t\t<List>\n\t\t\t\t\t{ !!isFetching && <List.Item className=\"text-center\">Loading </List.Item> }\n\t\t\t\t\t{ filterSuggestions(suggestions, inputValue).map((s, i) => {\n\t\t\t\t\t\t\tconst className = i === suggestionIndex ? \"active\" : \"\";\n\t\t\t\t\t\t\treturn (<List.Item \n\t\t\t\t\t\t\t\tkey={`suggestion-${i}`} \n\t\t\t\t\t\t\t\taction \n\t\t\t\t\t\t\t\tonMouseDown={() => handleSuggestionClick(s.id, s.text)}\n\t\t\t\t\t\t\t\tclassName={className}\n\t\t\t\t\t\t\t\t//dangerouslySetInnerHTML={{__html: (s.html || s.text)}}\n\t\t\t\t\t\t\t>\n                                {s.text}\n                            </List.Item>\n\t\t\t\t\t\t\t) \n\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t</List>\n\t\t\t}\t\t\n\t\t</div>\n\t)\n}\n\nTypeahead.propTypes = propTypes;\n\nexport default Typeahead;","import React from \"react\";\nimport Typeahead from \"../Typeahead/Typeahead\"\n\n\n\nexport default function MonsterInput(props){\n\n    return (\n        <>\n        <Typeahead \n            fetchAllOnOpen={true}\n            maxSuggestions={4}\n            placeholder={\"Find Monster...\"}\n            getSuggestions={() => props.monsterData.map(m => ({ id: m.index, text: m.name}))}\n            performAction={props.onChange}\n        />\n        </>\n    )\n}\n","import React, {useState} from \"react\"\n\nconst challengeRatingList = [0,0.125,0.25,0.5,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,30]\n\nexport default function RandomMonster({onChange = () => {}}){\n    const [challengeRating, setChallengeRating] = useState(0);\n\n\n    function handleChange(e){\n        \n        const cr = parseFloat(e.target.value, 10);\n        setChallengeRating(cr);\n        onChange(cr); \n   \n    }\n\n    return (\n        <>\n            <select onChange={handleChange} name=\"challengeRating\" value={challengeRating}>\n                {\n                    challengeRatingList.map((cr, index) => <option value={cr} key={`spa-${index}`}>{cr}</option>)        \n                }\n            </select>\n\n        </>\n    )\n}","import React from \"react\"\nimport ChallengeRating from \"../ChallengeRatings/ChallengeRatings\"\n\nexport default function RandomMonster(props){\n\n\n    return (\n        <>\n        <form method=\"GET\" action=\"/random\">\n            <label htmlFor=\"challengeRating\">Monster CR:</label>\n            <ChallengeRating />\n            <input type=\"submit\" value=\"Find Monster\"/>\n        </form>\n        </>\n    )\n}","import React, { useEffect, useState } from \"react\";\nimport {Redirect} from \"react-router-dom\"\nimport MonsterInput from \"../../components/MonsterInput/MonsterInput\"\nimport RandomMonster from \"../../components/RandomMonster/RandomMonster\"\n\nexport default function MonsterSearch(){\n\n\n    const [monsterData, setMonsterData] = useState(\"\");\n    const [challengeRating, setChallengeRating] = useState(\"\");\n    console.log(monsterData)\n\n    const onChange = (index) => {\n      setMonsterData({index})\n    }\n\n\n      const handleRandom = (cr) => {\n        console.log(challengeRating)    \n        setChallengeRating(cr)\n      }\n    \n    useEffect(() => {\n        let dungeonsAndDragons5Url = `https://www.dnd5eapi.co/api/monsters/`\n        const makeApiCall = () => {\n          fetch(dungeonsAndDragons5Url)\n            .then((res) => res.json())\n            .then((data) => {\n              setMonsterData(data)\n            })\n        }\n        makeApiCall();\n      }, []);\n\n      if (monsterData.index) return <Redirect to={`/${monsterData.index}`}/>\n    return(\n        <>\n        <div>Find a Monster</div>\n        <MonsterInput monsterData={monsterData.results} onChange={onChange}/>\n        <RandomMonster handleRandom={handleRandom} />\n        \n        </>\n    )\n}","import React from 'react'\n\n\nexport default function SpecialAbility(ability){\n    return(\n        <>\n        <dt><strong>{ability.name}</strong></dt> \n        <dd>{ability.desc}</dd>\n        </>\n    )\n}","import React from 'react'\n\n\nexport default function SpecialAbility(action){\n    return(\n        <>\n        <dt><strong>{action.name}</strong></dt> <dd>{action.desc}</dd>\n        </>\n    )\n}","import React from 'react'\n\n\nexport default function Proficiencies(pro){\n    return(\n        <div>{pro.proficiency.name} : {pro.value}</div>\n    )\n}","import React, {useState} from 'react'\nimport { Card, Icon} from 'semantic-ui-react'\nimport SpecialAbility from '../SpecialAbility/SpecialAbility'\nimport MonsterActions from '../MonsterActions/MonsterActions'\nimport Proficiencies from '../Proficiencies/Proficiencies'\n\nexport default function MonsterDetails({monster = {\n    speed: {}\n}, favoriteApi:{addFavorite, removeFavorite}, user}){\n    console.log(user)\n    const favoriteIndexNumber = user.favoriteMonsters.findIndex(favoriteMonsters => favoriteMonsters.monsterName === monster.name);\n    const [isFavorited, setIsFavorited] = useState(favoriteIndexNumber > - 1)\n\n    let speed = [\"Speed: \"]\n    let senses = [\"Senses: \"]\n    let vuln = [\"Vulnerabilities: \"]\n    let resist = [\"Resistances: \"]\n    let immune = [\"Immune: \"]\n    for (const prop in monster.speed){\n         speed.push(prop + \" \" + monster.speed[prop] + \" \")\n     }\n    for (const prop in monster.senses){\n        senses.push(prop + \" \" + monster.senses[prop] + \" \")\n    }\n    for (const prop in monster.damage_vulnerabilities){\n        vuln.push(monster.damage_vulnerabilities[prop] + \" \")\n    }\n\n    for (const prop in monster.damage_immunities){\n        immune.push(monster.damage_immunities[prop] + \" \")\n    }\n\n    for (const prop in monster.damage_resistances){\n        resist.push(monster.damage_resistances[prop] + \" \")\n    }\n    const favMon = user.favoriteMonsters\n    console.log(favMon, favoriteIndexNumber)\n\n\n    const clickHandler = isFavorited\n        ? () => {removeFavorite(favMon[favoriteIndexNumber]._id).then(() => setIsFavorited(false)) }\n        : () => {addFavorite({name:monster.name, index: monster.index}).then(() => setIsFavorited(true))}\n    const favoriteColor = isFavorited ? 'yellow' : 'grey';\n    //let speed = Object.keys(monster.speed).map((value) => console.log([value]))\n    console.log(monster.proficiencies[0])\n\n\n\n    \n    return(\n        <>\n         <Icon name={'star'} size='large' onClick={clickHandler} color={favoriteColor} />\n            <h2>{monster.name}</h2>\n            <div>{monster.size} <span>{monster.alignment}</span></div>\n            <div>{monster.type} <span>{monster.subtype}</span></div>\n            <div></div>\n            <div>{speed}</div>\n            <div>{senses}</div>\n            <div>Armor Class: {monster.armor_class}</div><div>Default HP:{monster.hit_points} <span>HD:{monster.hit_dice}</span></div>\n            <div>CR: {monster.challenge_rating}</div>\n            <h3>Attributes</h3>\n            <dl>\n            <dt>Strength</dt><dd>{monster.strength}</dd>\n            <dt>Dexterity</dt><dd>{monster.dexterity}</dd>\n            <dt>Constitution</dt><dd>{monster.constitution}</dd>\n            <dt>Intelligence</dt><dd>{monster.intelligence}</dd>\n            <dt>Wisdom</dt><dd>{monster.wisdom}</dd>\n            <dt>Charisma</dt><dd>{monster.charisma}</dd> \n            </dl>\n            { typeof(monster.proficiencies) === typeof([]) &&\n           \n           <ul>\n               {monster.proficiencies.map((value, index) => <li key={`spa-${index}`}><Proficiencies {...value} /></li>)}\n           </ul>\n           }\n\n            <div>{monster.languages}</div>\n            <div>{vuln}</div>\n            <div>{resist}</div>\n            <div>{immune}</div>\n           { typeof(monster.special_abilities) === typeof([]) &&\n           \n            <dl>\n                {monster.special_abilities.map((value, index) => <div key={`spa-${index}`}><SpecialAbility {...value} /></div>)}\n            </dl>\n            }\n            <h3>Actions</h3>\n            { typeof(monster.actions) === typeof([]) &&\n            <dl>\n                {monster.actions.map((value, index) => <div key={`spa-${index}`}><MonsterActions {...value} /></div>)}\n            </dl>\n            }\n            \n            <div>Experience Points: {monster.xp}</div>\n            \n        </>\n    )\n\n} ","import React, { useEffect, useState } from \"react\";\nimport {useParams} from \"react-router-dom\"\nimport MonsterDetails from \"../../components/MonsterDetails/MonsterDetails\"\n\n\n\nexport default function MonsterProfile({user, favoriteApi}){\n\n\n    const [monsterData, setMonsterData] = useState(\"\");\n    const [loaded, setLoaded] = useState(false)\n\n    const {monsterIndex} = useParams();\n\n\n\n    \n    useEffect(() => {\n        if (loaded) return;\n        let dungeonsAndDragons5Url = `https://www.dnd5eapi.co/api/monsters/${monsterIndex}`\n        const makeApiCall = () => {\n          fetch(dungeonsAndDragons5Url)\n            .then((res) => res.json())\n            .then((data) => {\n              setLoaded(true)\n              setMonsterData(data)\n            })\n         }\n        makeApiCall();\n       }, [monsterIndex]);\n\n      return(\n        <> \n            {loaded && monsterData && <MonsterDetails \n            monster={monsterData} \n            favoriteApi={favoriteApi}\n            user={user}\n            />} \n        </>\n      )\n\n}","import React from 'react'\nimport {Link} from 'react-router-dom'\n\n\nexport default function RandomMonsterCard({monster}){\n    console.log(monster)\n    return(\n        \n       <Link to={location => `${monster.index}`}>{monster.name}</Link>\n    )\n}","import React, {useState, useEffect} from 'react'\nimport RandomMonsterCard from \"../../components/RandomMonsterCard/RandomMonsterCard\"\nimport {useLocation} from \"react-router-dom\"\nimport queryString from \"query-string\"\n\n\nexport default function RandomMonsterPage(props){\n    const [loaded, setLoaded] = useState(false)\n    const [monster, setMonster] = useState(\"\");\n    let randomMonster = []\n\n    const location = useLocation();\n    const parsed = queryString.parse(location.search)\n    const monsterCr = parsed.challengeRating\n\n    useEffect(() => {\n        if (loaded) return;\n        let dungeonsAndDragons5Url = `https://www.dnd5eapi.co/api/monsters/?challenge_rating=${monsterCr}`\n        const makeApiCall = () => {\n          fetch(dungeonsAndDragons5Url)\n            .then((res) => res.json())\n            .then((data) => {\n              setLoaded(true)\n              setMonster(data)\n              ;\n            })\n         }\n        makeApiCall();\n       }, [monsterCr]);\n    if(monster && monster.results && monster.results.length){\n    for (let i=0; i < 4 && monster.results.length; i++){\n        let results = monster.results\n        let random = Math.floor(Math.random() * results.length)\n        let monsterSplice = results.splice(random, 1)\n        randomMonster.push(monsterSplice[0])\n        \n        }\n        \n       return (<>\n            {randomMonster.map((value, index) => <RandomMonsterCard monster={value} key={`RandomMonster-${index}`}/>)}\n       </>)\n    }\n       return(\n        <div>Loading</div>\n       )\n       \n}","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport { Header, Segment } from 'semantic-ui-react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { fab } from '@fortawesome/free-brands-svg-icons'\n\nlibrary.add(fab)\n\nexport default function PageHeader({handleLogout}){\n    return (\n        <Segment clearing>\n            <Header as='h2' floated='left'>\n                <Link to=\"/\"><FontAwesomeIcon icon={['fab', 'd-and-d']} size=\"2x\" /></Link>\n            </Header>\n            <Header as='h2' floated='right'>\n                <Link to='' onClick={handleLogout}>Logout</Link>\n            </Header>\n        </Segment>\n    )\n}","import React from 'react'\nimport RandomMonsterCard from \"../../components/RandomMonsterCard/RandomMonsterCard\"\n\nexport default function Profile({user, favoriteApi}){\n\n    console.log(user.favoriteMonsters)\n    let monsters = user.favoriteMonsters\n    return(\n        <>\n            <h2>{user.username} favorite monsters!</h2>\n            {monsters.map((value, index) => <RandomMonsterCard monster={{name: value.monsterName, index: value.monsterIndex}} key={`RandomMonster-${index}`}/>)}\n        </>\n    )\n}","import tokenService from './tokenService';\n\n\n\nconst BASE_URL = '/api';\n\nexport async function create(userID, monster){\n    console.log(monster)\n    \n    const response = await fetch(`${BASE_URL}/user/${userID}/favorite`, {\n        method: 'POST',\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken(),\n            'Accept' : 'application/json',\n            'Content-Type' : 'application/json'\n          },\n        body: JSON.stringify({\n            monster\n        })\n    })\n    const favoriteMonsters = await response.json()\n    tokenService.setFavoriteMonsters(favoriteMonsters)\n    return favoriteMonsters\n}\n\n\nexport async function removeFavorite(favID){\n    const response = await fetch(`${BASE_URL}/favorite/${favID}`, {\n        method: 'DELETE',\n        headers: {\n            'Authorization': 'Bearer ' + tokenService.getToken()\n          }\n    })\n    const favoriteMonsters = await response.json()\n    tokenService.setFavoriteMonsters(favoriteMonsters)\n    return favoriteMonsters\n}","import React, {useState} from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport './App.css';\nimport SignupPage from '../SignupPage/SignupPage';\nimport LoginPage from '../LoginPage/LoginPage';\nimport userService from '../../utils/userService'\nimport MonsterSearch from '../MonsterSearch/MonsterSearch'\nimport MonsterProfile from '../MonsterProfile/MonsterProfile'\nimport RandomMonsterPage from '../RandomMonsterPage/RandomMonsterPage';\nimport Header from '../../components/Header/Header'\nimport Profile from '../Profile/Profile'\nimport * as favoriteApi from '../../utils/favoriteService'\n\n\nfunction App() {\n\n  \n\n\n  const [user, setUser] = useState(userService.getUser()) // getUser decodes our JWT token, into a javascript object\n  // this object corresponds to the jwt payload which is defined in the server signup or login function that looks like \n  // this  const token = createJWT(user); // where user was the document we created from mongo\n\n  function handleSignUpOrLogin(){\n    setUser(userService.getUser()) // getting the user from localstorage decoding the jwt\n  }\n\n  function handleLogout(){\n    userService.logout();\n    setUser({user: null})\n  }\n\n  async function addFavorite(monster){\n    try {\n      const data = await favoriteApi.create(user._id, monster)\n      console.log(data, ' response from addLike')\n      setUser(u => ({...u, favoriteMonsters:data})) \n    } catch(err){\n      console.log(err)\n    }\n  }\n\n  async function removeFavorite(favoriteId){\n    try{  \n      const data = await favoriteApi.removeFavorite(favoriteId);\n      console.log(data, ' response from removeFavorite')\n       setUser(u => ({...u, favoriteMonsters:data})) \n    } catch(err){\n      console.log(err)\n    }\n  }\n  const favoriteFun = {addFavorite, removeFavorite}\n\n\n\n  return (\n    <div className=\"App\">\n      \n      <Switch>\n          <Route exact path=\"/login\">\n             <LoginPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          <Route exact path=\"/signup\">\n             <SignupPage handleSignUpOrLogin={handleSignUpOrLogin}/>\n          </Route>\n          {userService.getUser() ? \n            <> \n            <Header handleLogout={handleLogout}/>\n             <Switch>\n               <Route exact path =\"/profile\">\n                  <Profile user={user} favoriteApi={favoriteFun}/>\n                </Route>\n              <Route path=\"/random\" component={RandomMonsterPage}>\n                <RandomMonsterPage />\n              </Route>\n              <Route path=\"/:monsterIndex\">\n                 <MonsterProfile user={user} favoriteApi={favoriteFun}/>\n               </Route>\n                <Route exact path=\"/\">\n                    <MonsterSearch />\n                </Route>\n                \n            </Switch>\n            </>\n            :\n            <Redirect to='/login'/>\n          }\n  \n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport './index.css';\nimport App from './pages/App/App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nReactDOM.render(\n  <Router><App/></Router>,\n  document.getElementById('root')\n);\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}